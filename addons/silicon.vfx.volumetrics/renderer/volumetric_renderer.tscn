[gd_scene load_steps=38 format=2]

[ext_resource path="res://addons/silicon.vfx.volumetrics/renderer/volume_copy.shader" type="Shader" id=1]
[ext_resource path="res://addons/silicon.vfx.volumetrics/renderer/volume_integration.shader" type="Shader" id=2]
[ext_resource path="res://addons/silicon.vfx.volumetrics/renderer/volume_lighting_and_taa.shader" type="Shader" id=3]
[ext_resource path="res://addons/silicon.vfx.volumetrics/renderer/scene_scatter.shader" type="Shader" id=4]
[ext_resource path="res://addons/silicon.vfx.volumetrics/renderer/volumetric_renderer.gd" type="Script" id=5]

[sub_resource type="ViewportTexture" id=1]
viewport_path = NodePath("LightScatter")

[sub_resource type="ShaderMaterial" id=2]
resource_local_to_scene = true
shader = ExtResource( 1 )
shader_param/volume = SubResource( 1 )

[sub_resource type="ViewportTexture" id=3]
viewport_path = NodePath("LightTransmit")

[sub_resource type="ShaderMaterial" id=4]
resource_local_to_scene = true
shader = ExtResource( 1 )
shader_param/volume = SubResource( 3 )

[sub_resource type="Environment" id=5]
background_mode = 1
background_energy = 0.0
ambient_light_energy = 0.0

[sub_resource type="World" id=6]
environment = SubResource( 5 )

[sub_resource type="ViewportTexture" id=7]
viewport_path = NodePath("Scatter")

[sub_resource type="ViewportTexture" id=8]
flags = 4
viewport_path = NodePath("Emission")

[sub_resource type="ViewportTexture" id=9]
viewport_path = NodePath("Extinction")

[sub_resource type="Image" id=10]
data = {
"data": PoolByteArray( 0, 0, 0, 0 ),
"format": "RFloat",
"height": 1,
"mipmaps": false,
"width": 1
}

[sub_resource type="ImageTexture" id=11]
flags = 0
flags = 0
image = SubResource( 10 )
size = Vector2( 1, 1 )

[sub_resource type="ViewportTexture" id=12]
viewport_path = NodePath("Motion")

[sub_resource type="ViewportTexture" id=13]
flags = 4
viewport_path = NodePath("Phase")

[sub_resource type="ViewportTexture" id=14]
flags = 4
viewport_path = NodePath("PrevScatter")

[sub_resource type="ViewportTexture" id=15]
flags = 4

[sub_resource type="ShaderMaterial" id=16]
resource_local_to_scene = true
shader = ExtResource( 3 )
shader_param/is_transmission = false
shader_param/blend = 0.0
shader_param/tile_factor = Vector2( 8, 16 )
shader_param/vol_depth_params = Vector3( 0.98447, -0.155303, 0.351208 )
shader_param/sample_offset = Vector3( 0, 0, 0 )
shader_param/projection_matrix0 = Plane( 0.593724, 0, 0, 0 )
shader_param/projection_matrix1 = Plane( 0, 1.42815, 0, 0 )
shader_param/projection_matrix2 = Plane( 0, 0, -1.0002, -1 )
shader_param/projection_matrix3 = Plane( 0, 0, -0.10001, 0 )
shader_param/curr_view_matrix = Transform( -0.150365, 0.24332, -0.95822, 0, 0.96924, 0.246118, 0.988631, 0.0370074, -0.145739, 5.14094, 5.85464, 12.3547 )
shader_param/prev_inv_view_matrix = Transform( -0.150365, -3.72529e-09, 0.988631, 0.24332, 0.96924, 0.0370074, -0.95822, 0.246118, -0.145739, -11.4412, -7.38266, 5.2858 )
shader_param/use_light_data = false
shader_param/volumetric_shadows = false
shader_param/ambient_light = Vector3( 1, 1, 1 )
shader_param/current_volume = SubResource( 7 )
shader_param/previous_volume = SubResource( 14 )
shader_param/motion_volume = SubResource( 12 )
shader_param/extinction_volume = SubResource( 9 )
shader_param/emission_volume = SubResource( 8 )
shader_param/phase_volume = SubResource( 13 )
shader_param/light_data = SubResource( 11 )
shader_param/shadow_atlas = SubResource( 15 )

[sub_resource type="ViewportTexture" id=17]
viewport_path = NodePath("Extinction")

[sub_resource type="ViewportTexture" id=18]
viewport_path = NodePath("Motion")

[sub_resource type="ViewportTexture" id=19]
flags = 4
viewport_path = NodePath("PrevTransmit")

[sub_resource type="ShaderMaterial" id=20]
resource_local_to_scene = true
shader = ExtResource( 3 )
shader_param/is_transmission = true
shader_param/blend = 0.0
shader_param/tile_factor = Vector2( 8, 16 )
shader_param/vol_depth_params = Vector3( 0.98447, -0.155303, 0.351208 )
shader_param/sample_offset = null
shader_param/projection_matrix0 = Plane( 0.593724, 0, 0, 0 )
shader_param/projection_matrix1 = Plane( 0, 1.42815, 0, 0 )
shader_param/projection_matrix2 = Plane( 0, 0, -1.0002, -1 )
shader_param/projection_matrix3 = Plane( 0, 0, -0.10001, 0 )
shader_param/curr_view_matrix = Transform( -0.150365, 0.24332, -0.95822, 0, 0.96924, 0.246118, 0.988631, 0.0370074, -0.145739, 5.14094, 5.85464, 12.3547 )
shader_param/prev_inv_view_matrix = Transform( -0.150365, -3.72529e-09, 0.988631, 0.24332, 0.96924, 0.0370074, -0.95822, 0.246118, -0.145739, -11.4412, -7.38266, 5.2858 )
shader_param/use_light_data = false
shader_param/volumetric_shadows = true
shader_param/ambient_light = null
shader_param/current_volume = SubResource( 17 )
shader_param/previous_volume = SubResource( 19 )
shader_param/motion_volume = SubResource( 18 )

[sub_resource type="ViewportTexture" id=21]
viewport_path = NodePath("LightTransmit")

[sub_resource type="ShaderMaterial" id=22]
resource_local_to_scene = true
shader = ExtResource( 2 )
shader_param/is_transmittance = false
shader_param/shader_pass = null
shader_param/tile_factor = Vector2( 8, 16 )
shader_param/vol_depth_params = Vector3( 0.98447, -0.155303, 0.351208 )
shader_param/volume_scattering = SubResource( 1 )
shader_param/volume_transmittance = SubResource( 21 )

[sub_resource type="QuadMesh" id=23]
size = Vector2( 2, 2 )

[sub_resource type="Environment" id=24]
background_mode = 1
background_color = Color( 1, 1, 1, 1 )
ambient_light_energy = 0.0

[sub_resource type="World" id=25]
environment = SubResource( 24 )

[sub_resource type="ShaderMaterial" id=26]
resource_local_to_scene = true
shader = ExtResource( 2 )
shader_param/is_transmittance = true
shader_param/shader_pass = null
shader_param/tile_factor = Vector2( 8, 16 )
shader_param/vol_depth_params = Vector3( 0.98447, -0.155303, 0.351208 )
shader_param/volume_scattering = SubResource( 1 )
shader_param/volume_transmittance = SubResource( 21 )

[sub_resource type="ViewportTexture" id=27]
flags = 4
viewport_path = NodePath("ResolveScatter")

[sub_resource type="ViewportTexture" id=28]
flags = 4
viewport_path = NodePath("ResolveTransmit")

[sub_resource type="ShaderMaterial" id=29]
resource_local_to_scene = true
render_priority = -16
shader = ExtResource( 4 )
shader_param/tile_factor = Vector2( 8, 16 )
shader_param/vol_depth_params = Vector3( 0.98447, -0.155303, 0.351208 )
shader_param/is_transparent_pass = false
shader_param/volume_scattering = SubResource( 27 )
shader_param/volume_transmittance = SubResource( 28 )

[sub_resource type="QuadMesh" id=30]
size = Vector2( 2, 2 )

[sub_resource type="Shader" id=31]
code = "shader_type spatial;
render_mode unshaded, blend_mul;

uniform sampler2D volume_transmittance;

uniform vec2 volume_size;
uniform vec2 tile_factor;

uniform vec3 vol_depth_params;

void vertex() {
	POSITION = vec4(VERTEX.xy, -1.0, 1.0);
}

vec4 cubic(float v) {
	vec4 n = vec4(1.0, 2.0, 3.0, 4.0) - v;
	vec4 s = n * n * n;
	float x = s.x;
	float y = s.y - 4.0 * s.x;
	float z = s.z - 4.0 * s.y + 6.0 * s.x;
	float w = 6.0 - x - y - z;
	return vec4(x, y, z, w) * (1.0/6.0);
}

vec4 texture_bicubic(sampler2D sampler, vec2 tex_coords) {
	vec2 tex_size = vec2(textureSize(sampler, 0));
	vec2 inv_tex_size = 1.0 / tex_size;
	
	tex_coords = tex_coords * tex_size - 0.5;
	
	vec2 fxy = fract(tex_coords);
	tex_coords -= fxy;
	
	vec4 xcubic = cubic(fxy.x);
	vec4 ycubic = cubic(fxy.y);
	
	vec4 c = tex_coords.xxyy + vec2 (-0.5, +1.5).xyxy;
	
	vec4 s = vec4(xcubic.xz + xcubic.yw, ycubic.xz + ycubic.yw);
	vec4 offset = c + vec4 (xcubic.yw, ycubic.yw) / s;
	
	offset *= inv_tex_size.xxyy;
	
	vec4 sample0 = textureLod(sampler, offset.xz, 0.0);
	vec4 sample1 = textureLod(sampler, offset.yz, 0.0);
	vec4 sample2 = textureLod(sampler, offset.xw, 0.0);
	vec4 sample3 = textureLod(sampler, offset.yw, 0.0);
	
	float sx = s.x / (s.x + s.y);
	float sy = s.z / (s.z + s.w);
	
	return mix(mix(sample3, sample2, sx), mix(sample1, sample0, sx), sy);
}

vec4 texture3D(sampler2D tex, vec3 uvw, vec2 tiling) {
	float zCoord = uvw.z * tiling.x * tiling.y;
	float zOffset = fract(zCoord);
	
	vec2 uv = uvw.xy / tiling;
	float ratio = tiling.y / tiling.x;
	vec2 slice0Offset = vec2(float(int(zCoord) % int(tiling.x)), floor(ratio * zCoord / tiling.y));
	zCoord++;
	vec2 slice1Offset = vec2(float(int(zCoord) % int(tiling.x)), floor(ratio * zCoord / tiling.y));
	
	vec4 slice0colour = texture_bicubic(tex, slice0Offset/tiling + uv);
	vec4 slice1colour = texture_bicubic(tex, slice1Offset/tiling + uv);
	
//	return slice0colour; //no filtering.
	return mix(slice0colour, slice1colour, zOffset);
}

vec3 ndc_to_volume(vec3 coords, mat4 projection_matrix) {
	float z = 2.0 * coords.z - 1.0;
	z = -projection_matrix[3][2] / (z + projection_matrix[2][2]);
	z = vol_depth_params.z * log2(z * vol_depth_params.y + vol_depth_params.x);
	return vec3(coords.xy, z);
}

void fragment() {
	vec3 tile_margin = 1.0 / vec3(volume_size, tile_factor.x * tile_factor.y);
	
	vec3 ndc = vec3(SCREEN_UV, texture(DEPTH_TEXTURE, SCREEN_UV).r);
	ndc = ndc_to_volume(ndc, PROJECTION_MATRIX);
	ndc = clamp(ndc, tile_margin * vec3(1,1,0), 1.0 - tile_margin);
	
	vec3 transmittance = texture3D(volume_transmittance, ndc, tile_factor).rgb;
	ALPHA = dot(transmittance, vec3(1.0 / 3.0));
	
	ALBEDO = transmittance;
}
"

[sub_resource type="ShaderMaterial" id=32]
resource_local_to_scene = true
render_priority = -17
shader = SubResource( 31 )
shader_param/volume_size = Vector2( 101, 68 )
shader_param/tile_factor = Vector2( 8, 16 )
shader_param/vol_depth_params = Vector3( 0.98447, -0.155303, 0.351208 )
shader_param/volume_transmittance = SubResource( 28 )

[node name="VolumetricRenderer2" type="Node"]
pause_mode = 2
process_priority = 16384
script = ExtResource( 5 )
end = 40.0
tile_size = 16
distribution = 0.922
enabled = false

[node name="PrevScatter" type="Viewport" parent="."]
size = Vector2( 400, 333 )
own_world = true
transparent_bg = true
keep_3d_linear = true
debug_draw = 1
render_target_update_mode = 0

[node name="ColorRect" type="ColorRect" parent="PrevScatter"]
material = SubResource( 2 )
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="PrevTransmit" type="Viewport" parent="."]
size = Vector2( 400, 333 )
own_world = true
transparent_bg = true
keep_3d_linear = true
debug_draw = 1
render_target_update_mode = 0

[node name="ColorRect" type="ColorRect" parent="PrevTransmit"]
material = SubResource( 4 )
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Scatter" type="Viewport" parent="."]
size = Vector2( 400, 333 )
own_world = true
world = SubResource( 6 )
keep_3d_linear = true
debug_draw = 1
render_target_update_mode = 0

[node name="Camera" type="Camera" parent="Scatter"]
process_priority = -5
transform = Transform( -0.150365, 0.24332, -0.95822, 0, 0.96924, 0.246118, 0.988631, 0.0370074, -0.145739, 5.14094, 5.85464, 12.3547 )
current = true
near = 0.1
far = 40.0

[node name="Extinction" type="Viewport" parent="."]
size = Vector2( 400, 333 )
own_world = true
world = SubResource( 6 )
keep_3d_linear = true
debug_draw = 1
render_target_update_mode = 0

[node name="Camera" type="Camera" parent="Extinction"]
process_priority = 16384
transform = Transform( -0.150365, 0.24332, -0.95822, 0, 0.96924, 0.246118, 0.988631, 0.0370074, -0.145739, 5.14094, 5.85464, 12.3547 )
current = true
near = 0.1
far = 40.0

[node name="Emission" type="Viewport" parent="."]
size = Vector2( 400, 333 )
own_world = true
world = SubResource( 6 )
keep_3d_linear = true
debug_draw = 1
render_target_update_mode = 0

[node name="Camera" type="Camera" parent="Emission"]
process_priority = 16384
transform = Transform( -0.150365, 0.24332, -0.95822, 0, 0.96924, 0.246118, 0.988631, 0.0370074, -0.145739, 5.14094, 5.85464, 12.3547 )
current = true
near = 0.1
far = 40.0

[node name="Phase" type="Viewport" parent="."]
size = Vector2( 400, 333 )
own_world = true
world = SubResource( 6 )
keep_3d_linear = true
debug_draw = 1
render_target_update_mode = 0

[node name="Camera" type="Camera" parent="Phase"]
process_priority = 16384
transform = Transform( -0.150365, 0.24332, -0.95822, 0, 0.96924, 0.246118, 0.988631, 0.0370074, -0.145739, 5.14094, 5.85464, 12.3547 )
current = true
near = 0.1
far = 40.0

[node name="Motion" type="Viewport" parent="."]
size = Vector2( 400, 333 )
own_world = true
world = SubResource( 6 )
keep_3d_linear = true
debug_draw = 1
render_target_update_mode = 0

[node name="Camera" type="Camera" parent="Motion"]
process_priority = 16384
transform = Transform( -0.150365, 0.24332, -0.95822, 0, 0.96924, 0.246118, 0.988631, 0.0370074, -0.145739, 5.14094, 5.85464, 12.3547 )
current = true
near = 0.1
far = 40.0

[node name="LightScatter" type="Viewport" parent="."]
size = Vector2( 400, 333 )
own_world = true
transparent_bg = true
keep_3d_linear = true
debug_draw = 1
render_target_update_mode = 0

[node name="ColorRect" type="ColorRect" parent="LightScatter"]
material = SubResource( 16 )
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="LightTransmit" type="Viewport" parent="."]
size = Vector2( 400, 333 )
own_world = true
transparent_bg = true
keep_3d_linear = true
debug_draw = 1
render_target_update_mode = 0

[node name="ColorRect" type="ColorRect" parent="LightTransmit"]
material = SubResource( 20 )
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ResolveScatter" type="Viewport" parent="."]
size = Vector2( 400, 333 )
own_world = true
world = SubResource( 6 )
keep_3d_linear = true
debug_draw = 1
render_target_update_mode = 0

[node name="Camera" type="Camera" parent="ResolveScatter"]
process_priority = 16384
transform = Transform( -0.150365, 0.24332, -0.95822, 0, 0.96924, 0.246118, 0.988631, 0.0370074, -0.145739, 5.14094, 5.85464, 12.3547 )
current = true
near = 0.1
far = 40.0

[node name="Canvas" type="MeshInstance" parent="ResolveScatter"]
material_override = SubResource( 22 )
extra_cull_margin = 16384.0
mesh = SubResource( 23 )
material/0 = null
__meta__ = {
"apply_volumetrics": false
}

[node name="ResolveTransmit" type="Viewport" parent="."]
size = Vector2( 400, 333 )
own_world = true
world = SubResource( 25 )
keep_3d_linear = true
debug_draw = 1
render_target_update_mode = 0

[node name="Camera" type="Camera" parent="ResolveTransmit"]
process_priority = 16384
transform = Transform( -0.150365, 0.24332, -0.95822, 0, 0.96924, 0.246118, 0.988631, 0.0370074, -0.145739, 5.14094, 5.85464, 12.3547 )
current = true
near = 0.1
far = 40.0

[node name="Canvas" type="MeshInstance" parent="ResolveTransmit"]
material_override = SubResource( 26 )
extra_cull_margin = 16384.0
mesh = SubResource( 23 )
material/0 = null
__meta__ = {
"apply_volumetrics": false
}

[node name="SolidScatter" type="MeshInstance" parent="."]
visible = false
layers = 524288
material_override = SubResource( 29 )
extra_cull_margin = 16384.0
mesh = SubResource( 30 )
material/0 = null
__meta__ = {
"apply_volumetrics": false
}

[node name="SolidTransmit" type="MeshInstance" parent="."]
visible = false
layers = 524288
material_override = SubResource( 32 )
extra_cull_margin = 16384.0
mesh = SubResource( 30 )
material/0 = null
__meta__ = {
"apply_volumetrics": false
}
